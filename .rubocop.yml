# Omakase Ruby styling for Rails
inherit_gem: { rubocop-rails-omakase: rubocop.yml }

# Overwrite or add rules to create your own house style
#
# # Use `[a, [b, c]]` not `[ a, [ b, c ] ]`
# Layout/SpaceInsideArrayLiteralBrackets:
#   Enabled: false

# Prefer assert_not over assert !
Rails/AssertNot:
  Include:
    - "**/test/**/*"

# Prefer assert_not_x over refute_x
Rails/RefuteMethods:
  Include:
    - "**/test/**/*"

Rails/IndexBy:
  Enabled: true

Rails/IndexWith:
  Enabled: true

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# Align `when` with `case`.
Layout/CaseIndentation:
  Enabled: true

Layout/ClosingHeredocIndentation:
  Enabled: true

Layout/ClosingParenthesisIndentation:
  Enabled: true

# Align comments with method definitions.
Layout/CommentIndentation:
  Enabled: true

Layout/ElseAlignment:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable
  AutoCorrect: true

Layout/EndOfLine:
  Enabled: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Enabled: true
  EnforcedStyle: only_before

Layout/EmptyLinesAroundBlockBody:
  Enabled: true

# No empty lines around class, method, or module definitions.
Layout/EmptyLinesAroundClassBody:
  Enabled: true
Layout/EmptyLinesAroundMethodBody:
  Enabled: true
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true
  EnforcedShorthandSyntax: either

# Method definitions after `private` or `protected` isolated calls need one
# extra level of indentation.
Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: indented_internal_methods
  Exclude:
    - "**/*.md"

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

Layout/LeadingCommentSpace:
  Enabled: true

# Ensure consistent spacing rules
Layout/SpaceAfterColon:
  Enabled: true
Layout/SpaceAfterComma:
  Enabled: true
Layout/SpaceAfterSemicolon:
  Enabled: true
Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true
Layout/SpaceAroundKeyword:
  Enabled: true
Layout/SpaceAroundOperators:
  Enabled: true
Layout/SpaceBeforeComma:
  Enabled: true
Layout/SpaceBeforeComment:
  Enabled: true
Layout/SpaceBeforeFirstArg:
  Enabled: true

# Defining a method with parameters needs parentheses.
Style/DefWithParentheses:
  Enabled: true
Style/MethodDefParentheses:
  Enabled: true

Style/ExplicitBlockArgument:
  Enabled: true

# Frozen String Literal Comments: Enforce but exclude migrations
Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always
  Exclude:
    - "db/migrate/*.rb"
    - "**/*.md"

Style/MapToHash:
  Enabled: true
Style/RedundantFreeze:
  Enabled: true

# Block spacing rules
#
# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyleForEmptyBraces: space

# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes

# Detect hard tabs, no hard tabs.
Layout/IndentationStyle:
  Enabled: true

# Empty lines should not have any spaces.
Layout/TrailingEmptyLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

# Use quotes for string literals when they are enough.
Style/RedundantPercentQ:
  Enabled: true

Lint/AmbiguousOperator:
  Enabled: true
Lint/AmbiguousRegexpLiteral:
  Enabled: true
Lint/DuplicateRequire:
  Enabled: true
Lint/DuplicateMagicComment:
  Enabled: true
Lint/DuplicateMethods:
  Enabled: true
Lint/ErbNewArguments:
  Enabled: true
Lint/EnsureReturn:
  Enabled: true

# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
Lint/RequireParentheses:
  Enabled: true
Lint/RedundantStringCoercion:
  Enabled: true
Lint/UriEscapeUnescape:
  Enabled: true
Lint/UselessAssignment:
  Enabled: true
Lint/DeprecatedClassMethods:
  Enabled: true

Style/EvalWithLocation:
  Enabled: true
  Exclude:
    - "**/test/**/*"

Style/ParenthesesAroundCondition:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true
Style/RedundantBegin:
  Enabled: true
Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true
Style/RedundantRegexpEscape:
  Enabled: true
Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

# Prefer Foo.method over Foo::method
Style/ColonMethodCall:
  Enabled: true

Style/TrivialAccessors:
  Enabled: true

# Prefer a = b || c over a = b ? b : c
Style/RedundantCondition:
  Enabled: true
